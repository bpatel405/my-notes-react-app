{"version":3,"sources":["classes/Note.js","components/NotePanel/NotePanel.js","components/NoteContent/NoteContent.js","components/FirebaseAuth.js","config.js","App.js","index.js"],"names":["Note","Object","classCallCheck","this","Id","Title","Body","NotePanel","getInitials","str","arr","split","initial","forEach","element","charAt","userName","props","UserName","NoteList","activeIndex","ActiveIndex","changeActiveNote","createNewNote","fetchingNoteList","FetchingNoteList","react_default","a","createElement","className","onClick","onLogout","react_loader_spinner_default","type","color","height","width","map","note","index","key","Component","defaultProps","console","log","NoteContent","onChangeNoteTitle","e","title","_this","refs","value","length","preventDefault","handleOnChangeNoteTitle","onChangeNoteBody","body","handleOnChangeNoteBody","handleKeyPress","target","activeNote","ref","placeholder","onChange","deleteNote","autoCapitalize","autoCorrect","spellCheck","autoComplete","onKeyDown","FirebaseAuth","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","style","marginTop","border","StyledFirebaseAuth_default","firebaseAuth","React","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","App","possibleConstructorReturn","getPrototypeOf","call","handleOnChangeActiveNote","setState","state","notes","dbUpdater","collection","doc","update","NoteTitle","then","catch","NoteBody","handleCreateNewNote","add","Uid","handleDeleteNote","delete","logInUser","user","DisplayName","displayName","uid","localStorage","setItem","logoutUser","removeItem","onNewNoteAdd","data","id","noteList","push","onNoteModified","findIndex","aNote","onNoteDeleted","filter","dataListener","unsubscribe","where","onSnapshot","snapShot","docChanges","change","componentDidMount","unregisterAuthObserver","onAuthStateChanged","componentWillUnmount","getItem","components_FirebaseAuth","components_NotePanel_NotePanel","signOut","components_NoteContent_NoteContent","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ee77f927.chunk.js","sourcesContent":["\r\nclass Note {\r\n    constructor() {\r\n        this.Id = \"\";\r\n        this.Title = \"New Note\";\r\n        this.Body = \"\";\r\n    }\r\n}\r\n\r\nexport default Note;","import React, { Component } from 'react';\r\nimport \"./note-panel-style.css\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass NotePanel extends Component {\r\n\r\n\r\n    getInitials = str => {\r\n        let arr = str.split(\" \");\r\n        let initial = \"\";\r\n        arr.forEach(element => {\r\n            initial += element.charAt(0);\r\n        });\r\n        return initial;\r\n    }\r\n\r\n    render() {\r\n        const userName = this.props.UserName;\r\n        const initial = this.getInitials(userName);\r\n        const NoteList = this.props.NoteList;\r\n        const activeIndex = this.props.ActiveIndex;\r\n        const changeActiveNote = this.props.changeActiveNote;\r\n        const createNewNote = this.props.createNewNote;\r\n        const fetchingNoteList = this.props.FetchingNoteList;\r\n        return(\r\n            <div className='panel-container'>\r\n                <div className = 'border-bottom p-1'>\r\n                    <div className='d-flex flex-row mb-2'>\r\n                        <div className=\"badge badge-secondary h1 profile-initial mt-2\">{initial}</div>\r\n                        <div className='container ml-2'>\r\n                            <div className='row'><span className='profile-name'>{userName}</span></div>\r\n                            <div className='row mt-1'><button className=\"btn btn-danger btn-sm logout-btn\" onClick={this.props.onLogout}>Logout</button></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className='btn btn-light btn-block my-3' onClick={createNewNote}>Create New Note</button>\r\n                <div className='note-list'>\r\n                {\r\n                    fetchingNoteList ?\r\n                    <div className='d-flex justify-content-center'><Loader type='Oval' color='#00BFFF' height='100' width='100'/></div>\r\n                    :\r\n                    NoteList.map((note, index) => (\r\n                        <button className = {activeIndex === index ? 'border btn note-option active' : 'border btn note-option'} key = {index} onClick={() => changeActiveNote(index)}>\r\n                             {note.Title}\r\n                        </button>\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotePanel.defaultProps = {\r\n    NoteList : [],\r\n    ActiveIndex: -1,\r\n    changeActiveNote: console.log,\r\n    createNewNote: console.log,\r\n    FetchingNoteList : false,\r\n}\r\n\r\nexport default NotePanel;","import React, { Component } from 'react';\r\nimport Note from '../../classes/Note.js';\r\nimport \"./note-content-style.css\";\r\n\r\nclass NoteContent extends Component {\r\n\r\n    onChangeNoteTitle = (e) => {\r\n        const title = this.refs.title.value;\r\n        const maxTitleLength = 50;\r\n        if (title.length >= maxTitleLength) {\r\n            e.preventDefault();\r\n        }\r\n        else {\r\n            this.props.handleOnChangeNoteTitle(title);\r\n        }\r\n    }\r\n\r\n    onChangeNoteBody = () => {\r\n        const body = this.refs.body.value;\r\n        this.props.handleOnChangeNoteBody(body);\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if (e.key === \"Tab\") {\r\n            e.preventDefault();\r\n            e.target.value += \"\\t\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let note = this.props.activeNote;\r\n        return(\r\n            <div className='fluid-container note-container'>\r\n                <div className='row border-bottom'>\r\n                    <div className='input-group note-title-group'>\r\n                        <input type='text' className='form-control' ref='title' placeholder='Title' value={note.Title} onChange={this.onChangeNoteTitle}/>\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text btn btn-danger delete-btn\" onClick={this.props.deleteNote}>X</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row note-body'>\r\n                    <textarea className='form-control' ref='body' placeholder='Body'\r\n                        autoCapitalize='off' autoCorrect='off' spellCheck='false'  autoComplete='off'\r\n                         value={note.Body} onChange={this.onChangeNoteBody} onKeyDown={this.handleKeyPress}></textarea>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNoteContent.defaultProps = {\r\n    activeNote: new Note(),\r\n    onChangeNoteTitle: console.log,\r\n    onChangeNoteBody: console.log,\r\n    deleteNote: console.log,\r\n}\r\n\r\nexport default NoteContent;","// Import FirebaseAuth and firebase.\r\nimport React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n \r\nclass FirebaseAuth extends React.Component {\r\n \r\n  // Configure FirebaseUI.\r\n  uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [\r\n      this.props.firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  };\r\n \r\n  render() {\r\n      return (\r\n        <div className='fluid-container text-white' style={{height : '100vh'}}>\r\n            <div className='row'>\r\n                <div className='col-md-4'></div>\r\n                <div className='col-md-4' style={{marginTop : '25vh', border : '2px solid #00b3db'}}>\r\n                    <h1 className='d-flex justify-content-center'>My Notes</h1>\r\n                    <p className='d-flex justify-content-center'>Please &nbsp; <b>Log-In:</b></p>\r\n                    <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={this.props.firebase.auth()}/>\r\n                </div>\r\n                <div className='col-md-4'></div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport default FirebaseAuth;","import firebase from 'firebase';\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBVQGQ4DwJqToUGeFeEjM8BKabG2ux2fUM\",\r\n    authDomain: \"my-notes-2fa1c.firebaseapp.com\",\r\n    databaseURL: \"https://my-notes-2fa1c.firebaseio.com\",\r\n    projectId: \"my-notes-2fa1c\",\r\n    storageBucket: \"my-notes-2fa1c.appspot.com\",\r\n    messagingSenderId: \"761603453110\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\nvar db = firebase.firestore();\r\n\r\nexport {db, firebase};","import React, { Component } from 'react';\r\nimport Note from \"./classes/Note\";\r\nimport './app-style.css';\r\nimport NotePanel from \"./components/NotePanel/NotePanel\";\r\nimport NoteContent from './components/NoteContent/NoteContent';\r\nimport FirebaseAuth from \"./components/FirebaseAuth\";\r\nimport {db, firebase} from './config';\r\n\r\nclass App extends Component {\r\n  //App Constructor\r\n  constructor(props) {\r\n    super(props);\r\n    let uid = localStorage.getItem(\"uid\") !== null ? localStorage.getItem(\"uid\") : '';\r\n    let displayName = localStorage.getItem(\"displayName\") !== null ? localStorage.getItem(\"displayName\") : '';\r\n    this.state = {\r\n      Uid : uid,\r\n      DisplayName : displayName,\r\n      NoteList : [],\r\n      ActiveIndex : -1,\r\n      FetchingNoteList : true,\r\n    }\r\n  }\r\n\r\n  //change current viewing note when onClick\r\n  handleOnChangeActiveNote = index => {\r\n    this.setState({\r\n      ActiveIndex : index,\r\n    });\r\n  }\r\n\r\n  //change note title of activeNote\r\n  handleOnChangeNoteTitle = title => {\r\n    const activeIndex = this.state.ActiveIndex;\r\n    if (activeIndex !== -1) {\r\n      let notes = this.state.NoteList;\r\n      let dbUpdater = db.collection('notes')\r\n        .doc(notes[activeIndex].Id)\r\n        .update({\r\n          NoteTitle : title\r\n        });\r\n        dbUpdater.then().catch(dbUpdater);\r\n    }\r\n  }\r\n\r\n  //change note body of activeNote\r\n  handleOnChangeNoteBody = body => {\r\n    const activeIndex = this.state.ActiveIndex;\r\n    if (activeIndex !== -1) {\r\n      let notes = this.state.NoteList;\r\n      let dbUpdater = db.collection('notes')\r\n        .doc(notes[activeIndex].Id)\r\n        .update({\r\n          NoteBody : body,\r\n        });\r\n        dbUpdater.then().catch(dbUpdater);\r\n    }\r\n  }\r\n\r\n  //create new note \r\n  handleCreateNewNote = () => {\r\n    let note = new Note();\r\n    let dbUpdater = db.collection(\"notes\").add({\r\n      NoteTitle: note.Title,\r\n      NoteBody: note.Body,\r\n      Uid: this.state.Uid,\r\n    });\r\n    dbUpdater.then().catch(dbUpdater);\r\n  }\r\n\r\n  //deleteNote\r\n  handleDeleteNote = () => {\r\n    let notes = this.state.NoteList;\r\n    let activeIndex = this.state.ActiveIndex;\r\n    let dbUpdater = db.collection(\"notes\").doc(notes[activeIndex].Id).delete();\r\n    dbUpdater.then().catch(dbUpdater);\r\n  }\r\n\r\n  //change state and save info in local storage\r\n  logInUser = user => {\r\n    this.setState({\r\n      NoteList: [],\r\n      activeIndex: -1,\r\n      DisplayName: user.displayName,\r\n      Uid: user.uid,\r\n    }, () => {\r\n      localStorage.setItem(\"uid\", this.state.Uid);\r\n      localStorage.setItem(\"displayName\", this.state.DisplayName);\r\n    })\r\n  }\r\n\r\n  //change state and reset info in local storage\r\n  logoutUser = () => {\r\n    this.setState({\r\n      NoteList : [],\r\n      activeIndex : -1,\r\n      DisplayName: '',\r\n      Uid: '',\r\n    }, () => {\r\n      localStorage.removeItem(\"uid\");\r\n      localStorage.removeItem(\"displayName\");\r\n    })\r\n  }\r\n\r\n  //add new note to state if new note added to db\r\n  onNewNoteAdd = (data, id) => {\r\n    let note = new Note();\r\n    note.Title = data.NoteTitle;\r\n    note.Body = data.NoteBody;\r\n    note.Id = id;\r\n    let noteList = this.state.NoteList;\r\n    noteList.push(note);\r\n    this.setState({\r\n      NoteList : noteList,\r\n    });\r\n  }\r\n\r\n  //modify note from state if modification noted on db\r\n  onNoteModified = (data, id) => {\r\n    let notes = this.state.NoteList;\r\n    let index = notes.findIndex(aNote => aNote.Id === id);\r\n    notes[index].Title = data.NoteTitle;\r\n    notes[index].Body = data.NoteBody;\r\n    this.setState({\r\n      NoteList : notes,\r\n    });\r\n  }\r\n\r\n  //delete note from state if note deleted from db\r\n  onNoteDeleted = (id) => {\r\n    let notes = this.state.NoteList;\r\n    notes = notes.filter(aNote => aNote.Id !== id);\r\n    this.setState({\r\n      NoteList: notes,\r\n      ActiveIndex: -1\r\n    });\r\n  }\r\n\r\n  //set listner for data changes\r\n  dataListener = () => {\r\n    this.unsubscribe = db.collection('notes')\r\n      .where(\"Uid\", \"==\", this.state.Uid)\r\n        .onSnapshot((snapShot) => {\r\n          snapShot.docChanges().forEach((change) => {\r\n            if (change.type === 'added') {\r\n              this.onNewNoteAdd(change.doc.data(), change.doc.id);\r\n            }\r\n            if (change.type === 'modified') {\r\n              this.onNoteModified(change.doc.data(), change.doc.id);\r\n            }\r\n            if (change.type === 'removed') {\r\n              this.onNoteDeleted(change.doc.id);\r\n            }\r\n          });\r\n          //turn off loader\r\n          this.setState({\r\n            FetchingNoteList: false,\r\n          });\r\n        });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    //check if auth state changes\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n        user => {\r\n          if (user !== null) {\r\n            this.logInUser(user);\r\n            this.dataListener();\r\n          }\r\n          else {\r\n            this.logoutUser();\r\n            this.unsubscribe();\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.unregisterAuthObserver();\r\n  }\r\n\r\n  //Render App\r\n  render() {\r\n    const activeIndex = this.state.ActiveIndex;\r\n    const activeNote = activeIndex !== -1 ? this.state.NoteList[activeIndex] : new Note();\r\n    const uid = this.state.Uid;\r\n    const userName = this.state.DisplayName;\r\n    const noteList = this.state.NoteList;\r\n    const fetchingNoteList = this.state.FetchingNoteList;\r\n    return (\r\n      <div className = 'container-fluid app'>\r\n        { (uid === \"\")\r\n          ? <FirebaseAuth firebase={firebase} />\r\n          :\r\n          <div className = 'row'>\r\n            <div className = 'col-md-4 col-lg-4 col-xl-4 note-panel border-right'>\r\n              <NotePanel UserName={userName} NoteList={noteList} ActiveIndex={activeIndex} FetchingNoteList={fetchingNoteList} changeActiveNote={this.handleOnChangeActiveNote} createNewNote={this.handleCreateNewNote} onLogout={() => firebase.auth().signOut()}/>\r\n            </div>\r\n            <div className = 'col-md-8 col-lg-8 col-xl-8 note-content'>\r\n              {activeIndex !== -1 ? <NoteContent activeNote={activeNote} handleOnChangeNoteTitle={this.handleOnChangeNoteTitle} handleOnChangeNoteBody={this.handleOnChangeNoteBody} deleteNote={this.handleDeleteNote}/> : ''}\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}