{"version":3,"sources":["classes/Note.js","components/NotePanel/NotePanel.js","components/NoteContent/NoteContent.js","components/FirebaseAuth.js","config.js","App.js","index.js"],"names":["Note","Object","classCallCheck","this","Id","Title","Body","NotePanel","getInitials","str","arr","split","initial","forEach","element","charAt","toUpperCase","userName","props","UserName","NoteList","activeIndex","ActiveIndex","changeActiveNote","createNewNote","fetchingNoteList","FetchingNoteList","react_default","a","createElement","className","onClick","onLogout","id","react_loader_spinner_default","type","color","height","width","map","note","index","key","Component","defaultProps","console","log","NoteContent","onChangeNoteTitle","e","title","_this","refs","value","length","preventDefault","handleOnChangeNoteTitle","onChangeNoteBody","body","handleOnChangeNoteBody","handleKeyPress","target","activeNote","ref","placeholder","onChange","deleteNote","autoCapitalize","autoCorrect","spellCheck","autoComplete","onKeyDown","FirebaseAuth","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","Modal","assign","size","style","backgroundColor","aria-labelledby","centered","StyledFirebaseAuth_default","firebaseAuth","React","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","App","possibleConstructorReturn","getPrototypeOf","call","handleOnChangeActiveNote","setState","state","notes","dbUpdater","collection","doc","update","NoteTitle","then","catch","NoteBody","handleCreateNewNote","add","Uid","handleDeleteNote","delete","logInUser","user","DisplayName","displayName","uid","localStorage","setItem","logoutUser","removeItem","onNewNoteAdd","data","noteList","push","onNoteModified","findIndex","aNote","onNoteDeleted","filter","dataListener","unsubscribe","where","onSnapshot","snapShot","docChanges","change","componentDidMount","unregisterAuthObserver","onAuthStateChanged","componentWillUnmount","getItem","modalShow","components_FirebaseAuth","show","components_NotePanel_NotePanel","signOut","components_NoteContent_NoteContent","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a2f52bbc.chunk.js","sourcesContent":["\r\nclass Note {\r\n    constructor() {\r\n        this.Id = \"\";\r\n        this.Title = \"New Note\";\r\n        this.Body = \"\";\r\n    }\r\n}\r\n\r\nexport default Note;","import React, { Component } from 'react';\r\nimport \"./note-panel-style.css\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass NotePanel extends Component {\r\n\r\n    getInitials = str => {\r\n        let arr = str.split(\" \");\r\n        let initial = \"\";\r\n        arr.forEach(element => {\r\n            initial += element.charAt(0);\r\n        });\r\n        return initial.toUpperCase();\r\n    }\r\n\r\n    render() {\r\n        const userName = this.props.UserName;\r\n        const initial = this.getInitials(userName);\r\n        const NoteList = this.props.NoteList;\r\n        const activeIndex = this.props.ActiveIndex;\r\n        const changeActiveNote = this.props.changeActiveNote;\r\n        const createNewNote = this.props.createNewNote;\r\n        const fetchingNoteList = this.props.FetchingNoteList;\r\n        return(\r\n            <div className='panel-container'>\r\n                <div className = 'border-bottom p-1'>\r\n                    <div className='row'>\r\n                        <div className='d-flex flex-row mb-2 col-8'>\r\n                            <div className=\"badge badge-secondary h1 profile-initial mt-2\">{initial}</div>\r\n                            <div className='container ml-2'>\r\n                                <div className='row'><span className='profile-name'>{userName}</span></div>\r\n                                <div className='row mt-1'><button className=\"btn btn-danger btn-sm logout-btn\" onClick={this.props.onLogout}>Logout</button></div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className='d-flex align-items-center justify-content-end col-4'>\r\n                            <button className='btn btn-primary' onClick={this.displayList}><i className=\"fas fa-bars\"></i></button>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                <button className='btn btn-light btn-block my-3' onClick={createNewNote}>Create New Note</button>\r\n                <div className=\"card text-white\">\r\n                    <h5 className=\"card-header border-bottom bg-info text-center\">Saved Notes</h5>\r\n                    <div className='note-list card-body p-2' id='hide-list'>\r\n                    {\r\n                        fetchingNoteList ?\r\n                        <div className='d-flex justify-content-center m-5'><Loader type='Oval' color='#00BFFF' height='100' width='100'/></div>\r\n                        :\r\n                        NoteList.map((note, index) => (\r\n                            <button className = {activeIndex === index ? 'border btn note-option active' : 'border btn note-option'} key = {index} onClick={() => changeActiveNote(index)}>\r\n                                {note.Title}\r\n                            </button>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotePanel.defaultProps = {\r\n    NoteList : [],\r\n    ActiveIndex: -1,\r\n    changeActiveNote: console.log,\r\n    createNewNote: console.log,\r\n    FetchingNoteList : false,\r\n}\r\n\r\nexport default NotePanel;","import React, { Component } from 'react';\r\nimport Note from '../../classes/Note.js';\r\nimport \"./note-content-style.css\";\r\n\r\nclass NoteContent extends Component {\r\n\r\n    onChangeNoteTitle = (e) => {\r\n        const title = this.refs.title.value;\r\n        const maxTitleLength = 50;\r\n        if (title.length >= maxTitleLength) {\r\n            e.preventDefault();\r\n        }\r\n        else {\r\n            this.props.handleOnChangeNoteTitle(title);\r\n        }\r\n    }\r\n\r\n    onChangeNoteBody = () => {\r\n        const body = this.refs.body.value;\r\n        this.props.handleOnChangeNoteBody(body);\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if (e.key === \"Tab\") {\r\n            e.preventDefault();\r\n            e.target.value += \"\\t\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let note = this.props.activeNote;\r\n        return(\r\n            <div className='fluid-container note-container'>\r\n                <div className='row border-bottom'>\r\n                    <div className='input-group note-title-group'>\r\n                        <input type='text' className='form-control' ref='title' placeholder='Title' value={note.Title} onChange={this.onChangeNoteTitle}/>\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text btn btn-danger delete-btn\" onClick={this.props.deleteNote}>X</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row note-body'>\r\n                    <textarea className='form-control' ref='body' placeholder='Body'\r\n                        autoCapitalize='off' autoCorrect='off' spellCheck='false'  autoComplete='off'\r\n                         value={note.Body} onChange={this.onChangeNoteBody} onKeyDown={this.handleKeyPress}></textarea>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNoteContent.defaultProps = {\r\n    activeNote: new Note(),\r\n    onChangeNoteTitle: console.log,\r\n    onChangeNoteBody: console.log,\r\n    deleteNote: console.log,\r\n}\r\n\r\nexport default NoteContent;","// Import FirebaseAuth and firebase.\r\nimport React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport { Modal } from \"react-bootstrap\";\r\n \r\nclass FirebaseAuth extends React.Component {\r\n \r\n  // Configure FirebaseUI.\r\n  uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [\r\n      this.props.firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  };\r\n \r\n  render() {\r\n      return (\r\n            <Modal {...this.props} size=\"md\" style={{backgroundColor : '#282c34'}} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n              <Modal.Body>\r\n                <h4 className='d-flex justify-content-center'>My Notes</h4>\r\n                <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={this.props.firebase.auth()}/>\r\n              </Modal.Body>\r\n            </Modal>\r\n          );\r\n    }\r\n}\r\n\r\n\r\nexport default FirebaseAuth;","import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBVQGQ4DwJqToUGeFeEjM8BKabG2ux2fUM\",\r\n    authDomain: \"my-notes-2fa1c.firebaseapp.com\",\r\n    databaseURL: \"https://my-notes-2fa1c.firebaseio.com\",\r\n    projectId: \"my-notes-2fa1c\",\r\n    storageBucket: \"my-notes-2fa1c.appspot.com\",\r\n    messagingSenderId: \"761603453110\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\nvar db = firebase.firestore();\r\n\r\nexport {db, firebase};","import React, { Component } from 'react';\r\nimport Note from \"./classes/Note\";\r\nimport './app-style.css';\r\nimport NotePanel from \"./components/NotePanel/NotePanel\";\r\nimport NoteContent from './components/NoteContent/NoteContent';\r\nimport FirebaseAuth from \"./components/FirebaseAuth\";\r\nimport {db, firebase} from './config';\r\n\r\nclass App extends Component {\r\n  //App Constructor\r\n  constructor(props) {\r\n    super(props);\r\n    let uid = localStorage.getItem(\"uid\") !== null ? localStorage.getItem(\"uid\") : '';\r\n    let displayName = localStorage.getItem(\"displayName\") !== null ? localStorage.getItem(\"displayName\") : '';\r\n    this.state = {\r\n      Uid : uid,\r\n      DisplayName : displayName,\r\n      NoteList : [],\r\n      ActiveIndex : -1,\r\n      FetchingNoteList : true,\r\n    }\r\n  }\r\n\r\n  //change current viewing note when onClick\r\n  handleOnChangeActiveNote = index => {\r\n    this.setState({\r\n      ActiveIndex : index,\r\n    });\r\n  }\r\n\r\n  //change note title of activeNote\r\n  handleOnChangeNoteTitle = title => {\r\n    const activeIndex = this.state.ActiveIndex;\r\n    if (activeIndex !== -1) {\r\n      let notes = this.state.NoteList;\r\n      let dbUpdater = db.collection('notes')\r\n        .doc(notes[activeIndex].Id)\r\n        .update({\r\n          NoteTitle : title\r\n        });\r\n        dbUpdater.then().catch(dbUpdater);\r\n    }\r\n  }\r\n\r\n  //change note body of activeNote\r\n  handleOnChangeNoteBody = body => {\r\n    const activeIndex = this.state.ActiveIndex;\r\n    if (activeIndex !== -1) {\r\n      let notes = this.state.NoteList;\r\n      let dbUpdater = db.collection('notes')\r\n        .doc(notes[activeIndex].Id)\r\n        .update({\r\n          NoteBody : body,\r\n        });\r\n        dbUpdater.then().catch(dbUpdater);\r\n    }\r\n  }\r\n\r\n  //create new note \r\n  handleCreateNewNote = () => {\r\n    let note = new Note();\r\n    let dbUpdater = db.collection(\"notes\").add({\r\n      NoteTitle: note.Title,\r\n      NoteBody: note.Body,\r\n      Uid: this.state.Uid,\r\n    });\r\n    dbUpdater.then().catch(dbUpdater);\r\n  }\r\n\r\n  //deleteNote\r\n  handleDeleteNote = () => {\r\n    let notes = this.state.NoteList;\r\n    let activeIndex = this.state.ActiveIndex;\r\n    let dbUpdater = db.collection(\"notes\").doc(notes[activeIndex].Id).delete();\r\n    dbUpdater.then().catch(dbUpdater);\r\n  }\r\n\r\n  //change state and save info in local storage\r\n  logInUser = user => {\r\n    this.setState({\r\n      NoteList: [],\r\n      activeIndex: -1,\r\n      DisplayName: user.displayName,\r\n      Uid: user.uid,\r\n    }, () => {\r\n      localStorage.setItem(\"uid\", this.state.Uid);\r\n      localStorage.setItem(\"displayName\", this.state.DisplayName);\r\n    })\r\n  }\r\n\r\n  //change state and reset info in local storage\r\n  logoutUser = () => {\r\n    this.setState({\r\n      NoteList : [],\r\n      activeIndex : -1,\r\n      DisplayName: '',\r\n      Uid: '',\r\n    }, () => {\r\n      localStorage.removeItem(\"uid\");\r\n      localStorage.removeItem(\"displayName\");\r\n    })\r\n  }\r\n\r\n  //add new note to state if new note added to db\r\n  onNewNoteAdd = (data, id) => {\r\n    let note = new Note();\r\n    note.Title = data.NoteTitle;\r\n    note.Body = data.NoteBody;\r\n    note.Id = id;\r\n    let noteList = this.state.NoteList;\r\n    noteList.push(note);\r\n    this.setState({\r\n      NoteList : noteList,\r\n    });\r\n  }\r\n\r\n  //modify note from state if modification noted on db\r\n  onNoteModified = (data, id) => {\r\n    let notes = this.state.NoteList;\r\n    let index = notes.findIndex(aNote => aNote.Id === id);\r\n    notes[index].Title = data.NoteTitle;\r\n    notes[index].Body = data.NoteBody;\r\n    this.setState({\r\n      NoteList : notes,\r\n    });\r\n  }\r\n\r\n  //delete note from state if note deleted from db\r\n  onNoteDeleted = (id) => {\r\n    let notes = this.state.NoteList;\r\n    notes = notes.filter(aNote => aNote.Id !== id);\r\n    this.setState({\r\n      NoteList: notes,\r\n      ActiveIndex: -1\r\n    });\r\n  }\r\n\r\n  //set listner for data changes\r\n  dataListener = () => {\r\n    this.unsubscribe = db.collection('notes')\r\n      .where(\"Uid\", \"==\", this.state.Uid)\r\n        .onSnapshot((snapShot) => {\r\n          snapShot.docChanges().forEach((change) => {\r\n            if (change.type === 'added') {\r\n              this.onNewNoteAdd(change.doc.data(), change.doc.id);\r\n            }\r\n            if (change.type === 'modified') {\r\n              this.onNoteModified(change.doc.data(), change.doc.id);\r\n            }\r\n            if (change.type === 'removed') {\r\n              this.onNoteDeleted(change.doc.id);\r\n            }\r\n          });\r\n          //turn off loader\r\n          this.setState({\r\n            FetchingNoteList: false,\r\n          });\r\n        });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    //check if auth state changes\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n        user => {\r\n          if (user !== null) {\r\n            this.logInUser(user);\r\n            this.dataListener();\r\n          }\r\n          else {\r\n            this.logoutUser();\r\n            if (this.unsubscribe) {\r\n              this.unsubscribe();\r\n            }\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    if (this.unregisterAuthObserver) {\r\n      this.unregisterAuthObserver();\r\n    }\r\n  }\r\n\r\n  //Render App\r\n  render() {\r\n    const activeIndex = this.state.ActiveIndex;\r\n    const activeNote = activeIndex !== -1 ? this.state.NoteList[activeIndex] : new Note();\r\n    const uid = this.state.Uid;\r\n    const userName = this.state.DisplayName;\r\n    const noteList = this.state.NoteList;\r\n    let fetchingNoteList = this.state.FetchingNoteList;\r\n    let modalShow = false;\r\n    //if user logout\r\n    if (uid === \"\") {\r\n      modalShow = true;\r\n      fetchingNoteList = false;\r\n    }\r\n    return (\r\n      <div className = 'container-fluid app'>\r\n        <FirebaseAuth firebase={firebase} show={modalShow}/>\r\n        { \r\n          <div className = 'row'>\r\n            <div className = 'col-md-4 col-lg-4 col-xl-4 note-panel border-right'>\r\n              <NotePanel UserName={userName} NoteList={noteList} ActiveIndex={activeIndex} FetchingNoteList={fetchingNoteList} changeActiveNote={this.handleOnChangeActiveNote} createNewNote={this.handleCreateNewNote} onLogout={() => firebase.auth().signOut()}/>\r\n            </div>\r\n            <div className = 'col-md-8 col-lg-8 col-xl-8 note-content'>\r\n              {activeIndex !== -1 ? <NoteContent activeNote={activeNote} handleOnChangeNoteTitle={this.handleOnChangeNoteTitle} handleOnChangeNoteBody={this.handleOnChangeNoteBody} deleteNote={this.handleDeleteNote}/> : ''}\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}